openapi: 3.0.0
info:
  title: Healthcare Management System API
  description: API for managing healthcare system, including authentication, admin, doctor, patient, and system-related functionalities.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: Authentication
    description: User authentication and authorization
paths:
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: Signup a new user
      description: Register a new user (patient or doctor). Admins cannot be created via this route.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                birthDate:
                  type: string
                  format: date
                gender:
                  type: string
                phone:
                  type: string
                role:
                  type: string
                  enum: [patient, doctor]
              required:
                - name
                - email
                - password
                - birthDate
                - gender
                - phone
                - role
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signup successful
        '400':
          description: Bad request (e.g., missing fields or user already exists)
        '403':
          description: Forbidden (e.g., trying to create an admin)

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user
      description: Authenticate a user and return a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                  token:
                    type: string
        '404':
          description: User not found or incorrect password